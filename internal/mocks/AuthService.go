// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	auth "socialAPI/internal/api/auth"

	mock "github.com/stretchr/testify/mock"

	shared "socialAPI/internal/shared"
)

// AuthService is an autogenerated mock type for the AuthService type
type AuthService struct {
	mock.Mock
}

// Authenticate provides a mock function with given fields: _a0
func (_m *AuthService) Authenticate(_a0 auth.UserRequest) (*shared.TokenPair, *shared.HttpError) {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for Authenticate")
	}

	var r0 *shared.TokenPair
	var r1 *shared.HttpError
	if rf, ok := ret.Get(0).(func(auth.UserRequest) (*shared.TokenPair, *shared.HttpError)); ok {
		return rf(_a0)
	}
	if rf, ok := ret.Get(0).(func(auth.UserRequest) *shared.TokenPair); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*shared.TokenPair)
		}
	}

	if rf, ok := ret.Get(1).(func(auth.UserRequest) *shared.HttpError); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*shared.HttpError)
		}
	}

	return r0, r1
}

// Refresh provides a mock function with given fields: r
func (_m *AuthService) Refresh(r auth.RefreshRequest) (*shared.TokenPair, *shared.HttpError) {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for Refresh")
	}

	var r0 *shared.TokenPair
	var r1 *shared.HttpError
	if rf, ok := ret.Get(0).(func(auth.RefreshRequest) (*shared.TokenPair, *shared.HttpError)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(auth.RefreshRequest) *shared.TokenPair); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*shared.TokenPair)
		}
	}

	if rf, ok := ret.Get(1).(func(auth.RefreshRequest) *shared.HttpError); ok {
		r1 = rf(r)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*shared.HttpError)
		}
	}

	return r0, r1
}

// Register provides a mock function with given fields: r
func (_m *AuthService) Register(r auth.UserRequest) *shared.HttpError {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for Register")
	}

	var r0 *shared.HttpError
	if rf, ok := ret.Get(0).(func(auth.UserRequest) *shared.HttpError); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*shared.HttpError)
		}
	}

	return r0
}

// Revoke provides a mock function with given fields: r
func (_m *AuthService) Revoke(r auth.RefreshRequest) *shared.HttpError {
	ret := _m.Called(r)

	if len(ret) == 0 {
		panic("no return value specified for Revoke")
	}

	var r0 *shared.HttpError
	if rf, ok := ret.Get(0).(func(auth.RefreshRequest) *shared.HttpError); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*shared.HttpError)
		}
	}

	return r0
}

// NewAuthService creates a new instance of AuthService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewAuthService(t interface {
	mock.TestingT
	Cleanup(func())
}) *AuthService {
	mock := &AuthService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
